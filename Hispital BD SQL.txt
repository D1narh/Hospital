drop database Hospital

CREATE DATABASE Hospital
   ON  PRIMARY 
   (
         NAME = N'Hospital', 
         FILENAME = N'C:\DataBases\Hospital.mdf'
   )
   LOG ON 
   (
        NAME = N'Hospital_log', 
        FILENAME = N'C:\DataBases\Hospital_log.ldf'
   )
   GO

use Hospital


--Таблица клиентов
create table Client
(
Id int identity Primary key,
Adres nvarchar(255) Not null,
Telephone nvarchar(20) UNIQUE,
Name nvarchar(25) Not null,
First_Name nvarchar(25) Not null,
Last_Name nvarchar(25),
Birthday Date Not null,
Medical_Insurance int Not null,
Status nvarchar(40),
Gender bit -- 1 - M   0 - Ж
)

--Таблица отделение
create table Departament
(
Id int identity Primary key,
Floor int Not null,
Name nvarchar(30) Not null
)

--Таблица должности
create table Position
(
Id int identity Primary key,
Name nvarchar(30) Not null
)

--Таблица работники
create table Employee
(
Id int identity Primary key,
Name nvarchar(25) Not null,
First_Name nvarchar(25) Not null,
Last_Name nvarchar(25),
Position_Id int FOREIGN KEY (Position_Id) References Position(Id) Not null,
Telephone nvarchar(20) UNIQUE,
Departament_Id int Foreign key (Departament_Id) References Departament(Id) Not null,
Birthday Date Not null,
Medical_Insurance int Not null
)

--Таблица кабинет
create table Cabinet
(
Id int identity Primary key,
Employee_Id int Foreign key (Employee_Id) References Employee(Id) Not null,
Departament_Id int Foreign key (Departament_Id) References Departament(Id) Not null
)

--Таблица палата
create table Ward
(
Id int identity Primary key,
Departament_Id int Not null Foreign key (Departament_Id) References Departament(Id),
Place int Not null,
Owner_Place int Not null,
Employee_Id int Foreign key (Employee_Id) References Employee(Id) Not null,
Gender bit
)

--Таблица клиенты в палате
create table Ward_Client
(
Id int identity Primary key,
Ward_Id int Not null Foreign key (Ward_Id) references Ward(Id),
Client_Id int Not null Foreign key (Client_Id) references Client(Id),
Date_Invite date Not null,
Date_Leave date Not null
)

--Таблица услуга
create table Service
(
Id int identity Primary key,
Name nvarchar(30) Not null,
Service_time int Not null, --время указанное в минутах (СПРОСИТЬ ПО ЭТОМУ ПОВОДУ)
Price MONEY Not null Check (Price >= 1),
Departament_Id int Foreign key (Departament_Id) References Departament(Id) Not null,
Employee_Id int Foreign key (Employee_Id) References Employee(Id) Not null,
Cabinet_Id int Foreign key (Cabinet_Id) References Cabinet(Id) Not null
)

--Таблица запись на услугу
create table Appointment
(
Id int identity Primary key,
Service_Id int Foreign key (Service_Id) References Service(Id) Not null,
Client_Id int Foreign key (Client_Id) References Client(Id) Not null,
Start_date datetime Not null,
Employee_Id int Foreign key (Employee_Id) References Employee(Id) Not null,
Departament_Id int Foreign key (Departament_Id) References Departament(Id) Not null
)

--Таблица Отчет
create table Report
(
Id int identity Primary key,
Client_Id int Foreign key (Client_Id) References Client(Id) Not null,
Employee_Id int Foreign key (Employee_Id) References Employee(Id) Not null,
Recording nvarchar(1000) Not null,
Date datetime Not null,
Appointment_Id int Foreign key (Appointment_Id) References Appointment(Id) Not null
)

--Таблица Чек
create table Receipt
(
Id int identity Primary key,
Client_Id int Foreign key (Client_Id) References Client(Id) Not null,
Date_add datetime
)

--Таблица Поля чека
create table Receipt_Line
(
Id int identity Primary key,
Receipt_Id int Foreign key (Receipt_Id) References Receipt(Id) Not null,
Service_Id int Foreign key (Service_Id) References Service(Id) Not null,
Amount int Not null Check (Amount >= 1),
Price Money Not null Check (Price >= 1)
)

--Таблица Записи в медицинской карте
create table Card_Line
(
Id int identity Primary key,
Card_Id int Foreign key (Card_Id) References Client(Id) Not null,
Recording nvarchar(1000) Not null,
Date_add datetime Not null
)

--Таблица Медицинская карта
create table Medical_Card
(
Id int Foreign key (Id) References Client(Id) Not null,
Start_treatment datetime,
End_treatment datetime,
)

--Таблица  Какие записи были у клиента
create table Medical_Card_Appointment
(
Id int Foreign key (Id) References Client(Id) Not null,
Appointment_Id int Foreign key (Appointment_Id) References Appointment(Id) Not null,
Date datetime Not null
)

---------------------------------------------------------------------------------
--Блок хранимых процедур

--Хранимая процедура для клиента
drop procedure Add_Client

create procedure Add_Client(@Adres nvarchar(255),@Telephone nvarchar(20),@Name nvarchar(25),@First_Name nvarchar(25)
,@Last_Name nvarchar(25),@Birthday Date,@Medical_Insurance int,@Status nvarchar(40),@Gender bit)
As
Begin
insert into Client(Adres,Telephone,Name,First_Name,Last_Name,Birthday,Medical_Insurance,Status,Gender) values
(@Adres,@Telephone,@Name,@First_Name,@Last_Name,@Birthday,@Medical_Insurance,@Status,@Gender)
End
Go

--Хранимая процедура для отделения
drop procedure Add_Departament

create procedure Add_Departament(@Floor int,@Name nvarchar(30))
As
Begin
Insert into Departament(Floor,Name) values
(@Floor,@Name)
End
Go

--Хранимая процедура для работника
drop procedure Add_Employee

create procedure Add_Employee(@Name nvarchar(25),@First_Name nvarchar(25),@Last_Name nvarchar(25)
,@Position_Id int,@Telephone nvarchar(20),@Departament_Id int,@Birthday Date,@Medical_Insurance int)
As
Begin
Insert into Employee(Name,First_Name,Last_Name,Position_Id,Telephone,Departament_Id,Birthday,Medical_Insurance) values
(@Name,@First_Name,@Last_Name,@Position_Id,@Telephone,@Departament_Id,@Birthday,@Medical_Insurance)
End
Go

--Хранимая процедура для должности
drop procedure Add_Position

create procedure Add_Position(@Name nvarchar(30))
As
Begin
Insert into Position(Name) values
(@Name)
End
Go

--Хранимая процедура для кабинетов
drop procedure Add_Cabinet

create procedure Add_Cabinet(@Employee_Id int,@Departament_Id int)
As
Begin
Insert into Cabinet(Employee_Id,Departament_Id) values
(@Employee_Id,@Departament_Id)
End
Go

--Хранимая процедура для палат
drop procedure Add_Ward

create procedure Add_Ward(@Departament_Id int,@Place int,@Owner_Place int,@Employee_Id int,@Gender bit)
As 
Begin
Insert into Ward(Departament_Id,Place,Owner_Place,Employee_Id,Gender) values
(@Departament_Id,@Place,@Owner_Place,@Employee_Id,@Gender)
End
Go

--Хранимая процедура для добавления клиента в палату
drop procedure Add_Ward_Client

create procedure Add_Ward_Client(@Ward_Id int,@Client_Id int,@Date_Invite date,@Date_Leave date)
As
Begin 
Insert into Ward_Client(Ward_Id,Client_Id,Date_Invite,Date_Leave) values
(@Ward_Id,@Client_Id,@Date_Invite,@Date_Leave)
End
Go

--Хранимая процедура для услуг
drop prucedure Add_Service

create procedure Add_Service(@Name nvarchar(30),@Service_time int,@Price MONEY,@Departament_Id int,@Employee_Id int,
							 @Cabinet_Id int)
As
Begin
Insert into Service(Name,Service_time,Price,Departament_Id,Employee_Id,Cabinet_Id) values
(@Name,@Service_time,@Price,@Departament_Id,@Employee_Id,@Cabinet_Id)
End
Go

--Хранимая процедура для записей на услугу 
drop procedure Add_Appointment

create procedure Add_Appointment(@Service_Id int,@Client_Id int,@Start_date datetime,@Employee_Id int,@Departament_Id int)
As
Begin
Insert into Appointment(Service_Id,Client_Id,Start_date,Employee_Id,Departament_Id) values
(@Service_Id,@Client_Id,@Start_date,@Employee_Id,@Departament_Id)
End
Go

--Хранимая процедура для отчета
drop procedure Add_Report

create procedure Add_Report(@Client_Id int,@Employee_Id int,@Recording nvarchar(1000),@Appointment_Id int)
As
Begin
Declare @Date datetime
Select @Date = SYSDATETIME()
Insert into Report(Client_Id,Employee_Id,Recording,Date,Appointment_Id) values
(@Client_Id,@Employee_Id,@Recording,@Date,@Appointment_Id)

Insert into Card_Line(Card_Id,Recording,Date_add) values
(@Client_Id,@Recording,@Date)
End
Go

--Хранимая процедура для чека 
drop procedure Add_Receipt

create procedure Add_Receipt(@Client_Id int,@Date_add datetime)
As
Begin
insert into Receipt(Client_Id,Date_add) values
(@Client_Id,@Date_add)
End 
Go

--Хранимая процедура для полей чека
drop procedure Add_Receipt_Line

create procedure Add_Receipt_Line(@Receipt_Id int,@Service_Id int,@Amount int)
As
Begin
Declare @Price money
Select @Price = Price * @Amount from Service where Id = @Service_Id
insert into Receipt_Line(Receipt_Id,Service_Id,Amount,Price) values
(@Receipt_Id,@Service_Id,@Amount,@Price)
End
Go

--Хранимая процедура для медицинской карты
drop procedure Add_Medical_Card

create procedure Add_Medical_Card(@Id int,@Start_treatment datetime,@End_treatment datetime)
As
Begin
insert into Medical_Card(Id,Start_treatment,End_treatment) values
(@Id,@Start_treatment,@End_treatment)
End
Go

--Хранимая процедура для записи в медицинскую карту
drop procedure Add_Card_Line

create procedure Add_Card_Line(@Card_Id int,@Recording nvarchar(1000))
As
Begin
Declare @Date datetime
Select @Date = SYSDATETIME()
insert into Card_Line(Card_Id,Recording,Date_add) values
(@Card_Id,@Recording,@Date)
End
Go

--Хранимая процедура для внесения записей на услуги клиента в мед книгу
drop procedure Add_Medical_Card_Appointment

create procedure Add_Medical_Card_Appointment(@Id int,@Appointment_Id int,@Date datetime)
As
Begin
insert into Medical_Card_Appointment(Id,Appointment_Id,Date) values
(@Id,@Appointment_Id,@Date)
End
Go
----------------------------------------------------------------------------------------------
--Блок тригеров

--Триггер для клиента
--drop trigger New_Medical_card

--create trigger New_Medical_card on Client INSTEAD OF INSERT
--As 
--Begin 
--Declare @Id int
--Select @Id = Id from inserted
--Insert into Medical_Card(Id) values 
--(@Id)
--End
--GO


drop trigger client_in_ward

create trigger client_in_ward on Ward_Client INSTEAD OF INSERT
As
Begin 

	if exists(Select Client_Id, w.Gender from inserted i inner join
	Ward w on i.Ward_Id = w.Id inner join
	Client c on i.Client_Id = c.Id where (w.Gender = c.Gender) or (w.Gender is null)) -- Проверка подходит ли палата клиенту по гендору(полу)
		Begin
			if (Select w.Place from inserted i inner join
					  Ward w on i.Ward_Id = w.Id) > 0 -- Проверка есть ли места в палате
				Begin
					if not exists(Select TOP(1) i.Client_Id from inserted i inner join
						Ward_Client wc on wc.Client_Id = i.Client_Id where i.Client_Id = wc.Client_Id) -- Проверка на есть ли клиент уже в какой то палате
						Begin
							Insert into Ward_Client(Ward_Id,Client_Id,Date_Invite)
							Select Ward_Id,Client_Id,Date_Invite from inserted

							Update Ward SET Place = (Place - 1) where Id = (Select i.Ward_Id from inserted i)
						End
					Else
						Begin
							Print 'Вы пытаетесь записать килента который уже находиться в палате, в другую палату'
							ROLLBACK TRANSACTION
						End
				End
		End
	Else -- Блок проверок какая именно ошибка в добавлении
		Begin		
			if exists(Select i.Client_Id from inserted i inner join
			Ward_Client wc on wc.Client_Id = i.Client_Id ) --Проверка на есть ли клиент уже в какой то палате
				Begin
					Print 'Вы пытаетесь записать килента который уже находиться в палате, в другую палату'
					ROLLBACK TRANSACTION
				 End
			Else
				Begin 
					if not exists(Select w.Gender from inserted i inner join
								 Ward w on i.Ward_Id = w.Id inner join
								 Client c on i.Client_Id = c.Id where w.Gender = c.Gender) -- Проверка подходит ли палата клиенту по гендору(полу)
						Begin
							Print 'Вы пытаетесь добавить клиента палату не по гендору'
							ROLLBACK TRANSACTION
						End
							Else
								Begin
									if (Select w.Place from inserted i inner join
										 Ward w on i.Ward_Id = w.Id) = 0 -- Проверка есть ли места в палате
										Begin
											Print 'Вы пытаетесь добавить клиента палату в которой нету мест'
											ROLLBACK TRANSACTION
										End
								End
				End
		End
End
Go

--Код для проверки тригера ^
Select * from Ward
Select * from Ward_Client
Select * from Client
insert into Ward_Client(Client_Id,Ward_Id,Date_Invite) values
(8,23,SYSDATETIME())
--------------------------------------------------------------------------------------------
--Блок внесения тестовых данных

--Для клиента   (Адрес, Номер телефона, Имя, Фамилия, Отчество, Дата рождения, ИНН )
exec Add_Client 'Пл.Свободы 15','89610549314','Денис','Гурьянов','Денисович',N'12-06-2003',05120485,null,1
exec Add_Client 'цл.максима горького 43','89657492756','Владислав','Иванов','Владович',N'12-12-2005',00536234,null,1
exec Add_Client 'ул.покровская дом 5 кв 5','89075648506','Егор','Смирнов','Егорович',N'12-11-2006',12344563,null,1
exec Add_Client '10-й Сквозной переулок 2','89776057864','Маргарита','Киселева','Маргаритовна',N'12-10-2006',05122445,null,0
exec Add_Client 'улица 20-го Партсъезда 3','896754295642','Данияр','Кузнецов','Даниярович',N'12-09-2005',02420485,null,1
exec Add_Client '5-й Березовый переулок 3','89078562492','Алексей','Попов','Алексеевич',N'12-08-2001',07924515,null,1
exec Add_Client 'улица Вавилова 1','89061758231','Дмитрий','Васильев','Дмитриевич',N'12-07-2001',90657421,null,1
exec Add_Client 'улица Абая 1','8906546714','Александр','Петров','Александрович',N'18-01-2002',00067582,null,1
exec Add_Client 'улица Гагарина 2','89099967584','Андрей ','Соколов','Андреевич',N'22-05-2008',11857300,null,1
exec Add_Client 'Абазанская улица 9','89608461841','Артем','Михайлов','Артемович',N'17-01-2006',46571900,null,1
exec Add_Client '8-й Вязовский переулок 7','89610500657','Богдан','Новиков','Богданович',N'25-02-2001',09876543,null,1
exec Add_Client 'переулок Иванова 5','89610549876','Тамара','Соловьева','Тамаровна',N'27-03-2002',98674927,null,0
exec Add_Client 'улица Жана Жореса 10','89610564731','Анатолий','Федоров','Анатольевич',N'02-04-1999',08563856,null,1
exec Add_Client 'Кавказская улица 16','89665748291','Борис','Морозов','Борисович',N'14-07-2005',06417598,null,1
exec Add_Client 'Набережная улица 24','89067584123','Василий','Волков','Васильевич',N'11-06-2003',52389043,null,1
exec Add_Client 'Пл.Свободы 12','89609657421','Раиса','Андреева','Раисовна',N'16-10-2003',74531675,null,0
exec Add_Client 'улица Радищева  2','89610565772','Ульяна','Степанова','Ульяновна',N'27-12-2001',16534949,null,0
exec Add_Client 'Удмуртская улица 1','89610987600','Даниил','Алексеев','Даниилович',N'29-11-2002',23796034,null,1
exec Add_Client 'Фабричная улица  2','89610560042','Глеб','Павлов','Глебович',N'10-01-2001',64318903,null,0
exec Add_Client 'Шатурский переулок 5','89610768592','Нина','Козлова','Нановна',N'09-02-2000',05235789,null,0

--Для отделения(Этаж, Название)
exec Add_Departament 1,'Первое'
exec Add_Departament 2,'Второе'
exec Add_Departament 3,'Третье'
exec Add_Departament 4,'Четвертое'
exec Add_Departament 2,'Пятое'
exec Add_Departament 3,'Шестое'
exec Add_Departament 4,'Седьмое'
exec Add_Departament 2,'Возьмое'
exec Add_Departament 2,'Голубиное'
exec Add_Departament 4,'Тортова'

--Для должности(Название/Имя)
exec Add_Position 'Главный врач'
exec Add_Position 'Директор больницы'
exec Add_Position 'Акушер-гинеколог'
exec Add_Position 'Гематолог'
exec Add_Position 'Гериатр'
exec Add_Position 'Детский онколог-гематолог'
exec Add_Position 'Диабетолог'
exec Add_Position 'Медицинский микробиолог'
exec Add_Position 'Терапевт'
exec Add_Position 'Токсиколог'
exec Add_Position 'Уролог'

--Для работника(Имя, Фамилия, Отчество, Йд должности, Номер телефона, Йд отделения, Дата рождения, ИНН)
exec Add_Employee 'Денис','Гурьянов','Денисович',1,'89610549314',1,N'12-06-2003',05120485
exec Add_Employee 'Владислав','Иванов','Владович',2,'89061758233',2,N'12-12-2005',00536234
exec Add_Employee 'Егор','Смирнов','Егорович',3,'89610500652',3,N'12-11-2006',12344563
exec Add_Employee 'Маргарита','Киселева','Маргаритовна',4,'89610500651',4,N'12-10-2006',05122445
exec Add_Employee 'Данияр','Кузнецов','Даниярович',5,'89610549875',5,N'12-08-2001',07924515
exec Add_Employee 'Алексей','Попов','Алексеевич',6,'89609657426',6,N'12-07-2001',90657421
exec Add_Employee 'Дмитрий','Васильев','Дмитриевич',7,'89609657427',7,N'18-01-2002',00067582
exec Add_Employee 'Андрей ','Соколов','Андреевич',8,'89061758238',8,N'22-05-2008',11857300
exec Add_Employee 'Артем','Михайлов','Артемович',8,'89078562499',9,N'17-01-2006',46571900
exec Add_Employee 'Тамара','Соловьева','Тамаровна',9,'89078562490',10,N'25-02-2001',09876543
exec Add_Employee 'Нина','Козлова','Нановна',10,'89610549311',2,N'02-04-1999',08563856
exec Add_Employee 'Даниил','Алексеев','Даниилович',11,'89610565772',1,N'14-07-2005',06417598
exec Add_Employee 'Тамара','Соловьева','Тамаровна',3,'89665748293',4,N'11-06-2003',52389043
exec Add_Employee 'Ульяна','Степанова','Ульяновна',5,'8906546714',6,N'16-10-2003',74531675
exec Add_Employee 'Борис','Морозов','Борисович',4,'89610560045',4,N'27-12-2001',16534949
exec Add_Employee 'Анатолий','Федоров','Анатольевич',7,'89610768596',5,N'29-11-2002',23796034

--Select *  from Employee

--Для палата (Йд отделения, Количество свободных мест, Всего мест, Гендер, Йд работника)
exec Add_Ward 1,15,15,1,0  
exec Add_Ward 1,1,1,2,1
exec Add_Ward 2,2,2,3,null
exec Add_Ward 3,10,10,4,1
exec Add_Ward 6,12,12,5,0
exec Add_Ward 9,9,9,6,null
exec Add_Ward 5,5,5,7,1

Select * from Client
--Для клиентов в палате
exec Add_Ward_Client 13,1,N'12-06-2022',N'13-06-2022'
exec Add_Ward_Client 13,12,N'14-06-2022',N'20-06-2022'
exec Add_Ward_Client 13,3,N'15-06-2022',N'16-06-2022'
exec Add_Ward_Client 13,4,N'16-06-2022',N'17-07-2022'
exec Add_Ward_Client 13,5,N'17-06-2022',N'18-06-2022'
exec Add_Ward_Client 13,11,N'18-06-2022',N'25-06-2022'
exec Add_Ward_Client 13,7,N'19-06-2022',N'20-06-2022'
exec Add_Ward_Client 13,10,N'20-06-2022',N'21-08-2022'
exec Add_Ward_Client 13,9,N'21-06-2022',N'22-06-2022'

--Для услуги(Имя, Время проведения в мин, Цена, Йд отделение, Йд работника, Кабинет)
exec Add_Service 'Обследование',200,5600,1,1,1
exec Add_Service 'Обследование',200,2000,2,2,1
exec Add_Service 'Операция',200,10000,3,3,1
exec Add_Service 'Обследование',200,8500,4,4,1
exec Add_Service 'Обследование',200,500,5,5,1
exec Add_Service 'Обследование',200,1000,6,6,1
Select * from Cabinet

--Для кабинета (Йд работника, Йд отделения)
exec Add_Cabinet 1,1
exec Add_Cabinet 2,2
exec Add_Cabinet 3,3
exec Add_Cabinet 4,4
exec Add_Cabinet 5,5
exec Add_Cabinet 6,6
exec Add_Cabinet 7,7
exec Add_Cabinet 8,8

--Для записи на услугу 21-02-2012 6:10:00 PM
exec Add_Appointment 7,1,'21-05-2022 12:45:09 PM',1,1
exec Add_Appointment 8,2,'22-05-2022 12:45:09 PM',1,1
exec Add_Appointment 9,3,'23-05-2022 12:45:09 PM',1,1
exec Add_Appointment 11,4,'24-05-2022 12:45:09 PM',1,1
exec Add_Appointment 12,5,'25-05-2022 12:45:09 PM',1,1
exec Add_Appointment 8,2,'26-05-2022 12:45:09 PM',1,1

--Для отчета 
exec Add_Report 1,1,'GG',6

--Для чека
exec Add_Receipt 1,'21-05-2022 12:45:09 PM'
exec Add_Receipt 2,'22-05-2022 12:45:09 PM'
exec Add_Receipt 3,'23-05-2022 12:45:09 PM'
exec Add_Receipt 4,'24-05-2022 12:45:09 PM'

--Для полей чека (Йд чека, Йд услуги, Колличество)
exec Add_Receipt_Line 1,10,2
exec Add_Receipt_Line 1,8,1
exec Add_Receipt_Line 1,11,2


--Для прооперированных пациентов
Exec Add_Medical_Card 1,N'12-06-2022',null
Exec Add_Appointment 14,1,'12-06-2022 12:45:09 PM',1,1

--Сколько дней клиент будет(был) в больнице
Exec Add_Medical_Card 2,N'12-06-2022',N'08-07-2022'
--------------------------------------------------------------------------------------------
--Хранимые процедуры для проверки тех или иных параметров


--Пропусная способность поликлиники 
--В данном варианет рассмотрим следующую формулу T = I/F  где т - пропусная способность, I- колличество коек,F - Вромя которое пролежали клиенты
create procedure Propusk
As
Begin
Select sum(Owner_Place)/sum(DATEDIFF(DAY, Date_Invite, Date_Leave)) from Ward_Client inner join 
Ward on Ward.Id = Ward_Client.Ward_Id
End
Go

Exec Propusk

--Среднее время препровождения в палате
drop procedure Sred

create procedure Sred
As
Begin
Select 'Среднее время пробывание в больнице'=AVG(DATEDIFF(DAY, Date_Invite, Date_Leave)) from Ward_Client
End
Go

Exec Sred

--Колличество свободных мест в палатах для мужчин
drop procedure Mesta_for_M

create procedure Mesta_for_M
As
Begin
Select 'Количество мест для мужчин'=SUM(Place) from Ward where Gender = 1
End
Go

exec Mesta_for_M


--Колличество свободных мест в палатах для женщин
drop procedure Mesta_for_W

create procedure Mesta_for_W
As
Begin
Select 'Количество мест для женщин'=SUM(Place) from Ward where Gender = 0
End
Go

exec Mesta_for_W

--Количество свободных мест в палатах общего назначения
drop procedure Mesta_for_All

create procedure Mesta_for_All
As
Begin
Select 'Количество мест в палатах общего назначения'=SUM(Place) from Ward where Gender is null
End
Go

exec Mesta_for_All

--Колличество прооперированных пациентов 
drop procedure Operated_patients

create procedure Operated_patients
As
Begin
Select 'Колличество прооперированных клиентов'=SUM(c.Id),'С осложнениями' = (Select SUM(c.Id) where Status = 'Осложнения'),
'Умерших' = (Select SUM(c.Id) where Status = 'Умерший' ) from Appointment a inner join
Client c on a.Client_Id = c.Id inner join
Medical_Card mc on mc.Id = c.Id where (Service_Id = 14) and (mc.End_treatment is null)
Group by Status
End
Go

--Срок лечения определенного человека
drop procedure Time_of_treatment

create procedure Time_of_treatment(@Client_Id int)
As
Begin
Select 'Срок лечения'=DATEDIFF(DAY, Start_treatment, End_treatment) from Medical_Card where Id = @Client_Id
End
Go